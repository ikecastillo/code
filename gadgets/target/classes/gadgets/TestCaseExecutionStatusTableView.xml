<?xml version="1.0" encoding="UTF-8" ?><Module><ModulePrefs title="Test Case Execution Status (Table view)" directory_title="Test Case Execution Status (Table view)" description="Test Case Execution Status (Table view)" author="Ness" thumbnail="http://goo.gl/LDofI"><Require feature="dynamic-height"/><Require feature="oauthpopup"/><Require feature="setprefs"/><Require feature="settitle"/><Require feature="views"/><Optional feature="atlassian.util"/><Optional feature="gadget-directory"><Param name="categories">JIRA</Param></Optional>
        #oauth
        #supportedLocales("gadget.common,gadget.days.left")
        #supportLocales
    </ModulePrefs><UserPref name="refresh" datatype="hidden" default_value="false"/><UserPref name="isConfigured" datatype="hidden" default_value="false"/><UserPref name="firstTime" datatype="hidden" default_value="true"/><UserPref name="projectId" datatype="hidden"/><UserPref name="version" datatype="hidden" default_value="All"/><UserPref name="sprintId" datatype="hidden" default_value="All"/><UserPref name="groupbyField" datatype="hidden" default_value="Severity"/><UserPref name="qmetryUid" datatype="hidden" default_value="Severity"/><UserPref name="qmetryPwd" datatype="hidden" default_value="Severity"/><Content type="html">
    <![CDATA[
    #requireResource("com.atlassian.jira.gadgets:common")
	#requireResource("com.dt.jira.plugins.DealertrackAgilePlugins:dt-gadgets-common-js")
	#includeResources()
		<script type="text/javascript">
		(function () {
			/* (1) Construct and initialise the gadget */
			var GROUP_BY_FIELD = "DT-Environment";
			var gadget = AJS.Gadget({
				baseUrl: "__ATLASSIAN_BASE_URL__", /* (3) Used to make base url available to gadget */
				useOauth: "/rest/gadget/1.0/currentUser",
				config: {
                 descriptor: function(args)
                 {
                     var gadget = this;
					 var userId = DTGADGET.populateOuthDetail(gadget,"qmetryUid","qmetryPwd",args.userOuth);
					 console.log('UI: '+args.userOuth.qmetryUid);
					 console.log('UI: '+args.userOuth.qmetryPwd);
					 console.log('Gadget: '+this.getPref("qmetryUid"));
                     var projectPicker = AJS.gadget.fields.projectPicker(gadget, "projectId", args.projectOptions);
                     return {
                         theme : function()
                         {
                             if (gadgets.window.getViewportDimensions().width < 450)
                             {
                                 return "gdt top-label";
                             }
                             else
                             {
                                 return "gdt";
                             }
                         }(),
                         fields: [
						     projectPicker,
							 DTGADGET.releasePicker(gadget, "projectId", "version", true, false),
                             AJS.gadget.fields.nowConfigured()
                         ]
                     };
                 },
                 args: function()
                 {
                     return [
                         {
                             key: "projectOptions",
                             ajaxOptions:  "/rest/dealertrackqmetry/1.0/testexecutionstatus/getProjects.json"
							
                         },
						 {
                             key: "userOuth",
                             ajaxOptions:  "/rest/dealertrackqmetry/1.0/qmetryconfig.json" 
                         } 						 
                     ];
                 }()
				},
			 
				      view: {
							//enableReload: true,
							template: function(args) {
								var gadget = this;
								 
								var projectList = AJS.$("<table/>").css("width","100%").css("border","1px solid #B3B8B9").css("text-align","center");
								var sevTR =  AJS.$("<tr/>").css( "backgroundColor", "#EEF7FF" ).css("width","100%").css("border","1px solid #B3B8B9");
								sevTR.append(AJS.$("<td/>").css("width","30%").text('Cycle').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Total Defects').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Total Testcases').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Total Testcases Executed').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Passed').css("border-right","1px solid #B3B8B9"))							
								sevTR.append(AJS.$("<td/>").text('Failed').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Not Run').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Not Applicable').css("border-right","1px solid #B3B8B9"))
								sevTR.append(AJS.$("<td/>").text('Blocked'))
								projectList.append(sevTR);
								AJS.$(args.projectData).each(function() {	
								 var dataTR =  AJS.$("<tr/>");
									dataTR.append( AJS.$("<td/>").text(this.build).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.totdefects).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.tottestcases).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.tottestcasesexec).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.passed).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.failed).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.notrun).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.notapplicable).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
									dataTR.append( AJS.$("<td/>").text(this.blocked).css("border-left","1px solid #B3B8B9").css("border-right","1px solid #B3B8B9") )
								 projectList.append(dataTR);
								});
								gadget.getView().html(projectList);
							},
							args: [{
								key: "projectData",
								ajaxOptions: function() {
									return {
										url: "/rest/dealertrackqmetry/1.0/testexecutionstatus.json", 
										contentType: "application/json",
										data:  { 
												projectkey : gadgets.util.unescapeString(this.getPref("projectId")),
												version: gadgets.util.unescapeString(this.getPref("version").split('|').toString()), 
												sprintId: gadgets.util.unescapeString(this.getPref("sprintId").split('|').toString())												
										}
									};
								}
							}]
						}
			});
		})();
	
 </script>
  ]]>
  </Content></Module>