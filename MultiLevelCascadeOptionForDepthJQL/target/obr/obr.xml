<repository lastmodified='20180215125354.979'>
  <resource id='com.dt.jira.multilevelcascadedepth.MultiLevelCascadeOptionForDepthJQL/1.0.0.SNAPSHOT' symbolicname='com.dt.jira.multilevelcascadedepth.MultiLevelCascadeOptionForDepthJQL' presentationname='MultiLevelCascadeOptionForDepthJQL' uri='MultiLevelCascadeOptionForDepthJQL-1.0.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>This is the com.dt.jira.multilevelcascadedepth:MultiLevelCascadeOptionForDepthJQL plugin for Atlassian JIRA.</description>
    <size>272226</size>
    <documentation>http://www.dealertrack.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.dt.jira.multilevelcascadedepth.MultiLevelCascadeOptionForDepthJQL'/>
      <p n='presentationname' v='MultiLevelCascadeOptionForDepthJQL'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.dt.jira.multilevelcascadedepth.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.issue.search))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.issue.search</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.component))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.component</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.option))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.option</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.search))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.search</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.jql.operand))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.jql.operand</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.jql.query))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.jql.query</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.jql.function))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.plugin.jql.function</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.web.bean))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.web.bean</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query.clause))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query.clause</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query.operand))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query.operand</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api</require>
    <require name='package' filter='(&amp;(package=com.dt.jira.multilevelcascadedepth.api))' extend='false' multiple='false' optional='false'>Import package com.dt.jira.multilevelcascadedepth.api</require>
    <require name='package' filter='(&amp;(package=com.google.common.base))' extend='false' multiple='false' optional='false'>Import package com.google.common.base</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect))' extend='false' multiple='false' optional='false'>Import package com.google.common.collect</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.inject))' extend='false' multiple='false' optional='false'>Import package javax.inject</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.parsing</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.io</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='false'>Import package org.springframework.util</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
</repository>